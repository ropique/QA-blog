name: Build and Deploy Code

on: [push, pull_request]

  
jobs:
  build: 
    environment:
       name: anush-fastapi
    env:
     DATABASE_HOSTNAME: localhost
     DATABASE_PORTP: 5432
     DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
     DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
     DATABASE_USERNAME: postgres
     SECRET_KEY: ${{ secrets.SECRET_KEY }}
     ALGORITHM: HS256
     ACCESS_TOKEN_EXPIRE_MINUTES: 600 
    services:
       postgres:
          image: postgres
          env: 
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            OSTGRES_DB: fastapi
          ports:
            - 5432:5432
          options:
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5   

    runs-on: ubuntu-latest
    steps:
       - name: pulling git repo
         uses: actions/checkout@v2
       - name: Install python version 3.9
         uses: actions/setup-python@v2
         with:
           python-version: "3.9"  
       - name: update pip
         run: python -m pip install --upgrade pip 
       - name: install all dependencies
         run: pip install -r requirements.txt    
       - name: test with pytest
         run: 
          pip install pytest
          pytest   

  deploy: 
    runs-on: ubuntu-latest
    needs: [build]

    steps: 
     - name: deployinh
       run: echo "going to deploy in ubuntu"
            
      #  - name: Login to Docker Hub
      #    uses: docker/login-action@v1
      #    with:
      #      username: anushfastapi
      #      password: d36c1c84-44cc-442b-a81a-875487fc2da9

      #  - name: Set up Docker Buildx
      #    id: buildx
      #    uses: docker/setup-buildx-action@v1

      #  - name: Build and push
      #    id: docker_build
      #    uses: docker/build-push-action@v2
      #    with:
      #      context: ./
      #      file: ./Dockerfile
      #      builder: ${{ steps.buildx.outputs.name }}
      #      push: true
      #      tags: anushfastapi/anush_fastapu:latest
      #      cache-from: type=local,src=/tmp/.buildx-cache
      #      cache-to: type=local,dest=/tmp/.buildx-cache
      #  - name: Image digest
      #    run: echo ${{ steps.docker_build.outputs.digest }}


   
 
        
